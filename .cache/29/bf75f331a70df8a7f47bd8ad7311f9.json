{"id":"node_modules/react-timeago/lib/dateParser.js","dependencies":[{"name":"/home/matth/VandyHacks/react-dayof/package.json","includedInParent":true,"mtime":1540674275458},{"name":"/home/matth/VandyHacks/react-dayof/.babelrc","includedInParent":true,"mtime":1540592072973},{"name":"/home/matth/VandyHacks/react-dayof/node_modules/react-timeago/package.json","includedInParent":true,"mtime":1540664112442}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = dateParser;\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); }\n\nfunction dateParser(date) {\n  var parsed = new Date(date);\n  if (!Number.isNaN(parsed.valueOf())) {\n    return parsed;\n  }\n\n  var parts = String(date).match(/\\d+/g);\n  if (parts == null || parts.length <= 2) {\n    return parsed;\n  } else {\n    var _parts$map = parts.map(function (x) {\n      return parseInt(x);\n    }),\n        _parts$map2 = _toArray(_parts$map),\n        firstP = _parts$map2[0],\n        secondP = _parts$map2[1],\n        restPs = _parts$map2.slice(2);\n\n    var correctedParts = [firstP, secondP - 1].concat(_toConsumableArray(restPs));\n    var isoDate = new Date(Date.UTC.apply(Date, _toConsumableArray(correctedParts)));\n    return isoDate;\n  }\n}","map":{"mappings":[{"source":"node_modules/react-timeago/lib/dateParser.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/react-timeago/lib/dateParser.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/react-timeago/lib/dateParser.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/react-timeago/lib/dateParser.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/react-timeago/lib/dateParser.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/react-timeago/lib/dateParser.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/react-timeago/lib/dateParser.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/react-timeago/lib/dateParser.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/react-timeago/lib/dateParser.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/react-timeago/lib/dateParser.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/react-timeago/lib/dateParser.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/react-timeago/lib/dateParser.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/react-timeago/lib/dateParser.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/react-timeago/lib/dateParser.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/react-timeago/lib/dateParser.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/react-timeago/lib/dateParser.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/react-timeago/lib/dateParser.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/react-timeago/lib/dateParser.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/react-timeago/lib/dateParser.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/react-timeago/lib/dateParser.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/react-timeago/lib/dateParser.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/react-timeago/lib/dateParser.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/react-timeago/lib/dateParser.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/react-timeago/lib/dateParser.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/react-timeago/lib/dateParser.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/react-timeago/lib/dateParser.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/react-timeago/lib/dateParser.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/react-timeago/lib/dateParser.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/react-timeago/lib/dateParser.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/react-timeago/lib/dateParser.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/react-timeago/lib/dateParser.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/react-timeago/lib/dateParser.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/react-timeago/lib/dateParser.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/react-timeago/lib/dateParser.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}}],"sources":{"node_modules/react-timeago/lib/dateParser.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = dateParser;\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); }\n\nfunction dateParser(date) {\n  var parsed = new Date(date);\n  if (!Number.isNaN(parsed.valueOf())) {\n    return parsed;\n  }\n\n  var parts = String(date).match(/\\d+/g);\n  if (parts == null || parts.length <= 2) {\n    return parsed;\n  } else {\n    var _parts$map = parts.map(function (x) {\n      return parseInt(x);\n    }),\n        _parts$map2 = _toArray(_parts$map),\n        firstP = _parts$map2[0],\n        secondP = _parts$map2[1],\n        restPs = _parts$map2.slice(2);\n\n    var correctedParts = [firstP, secondP - 1].concat(_toConsumableArray(restPs));\n    var isoDate = new Date(Date.UTC.apply(Date, _toConsumableArray(correctedParts)));\n    return isoDate;\n  }\n}"},"lineCount":34}},"hash":"647fd304ff4605a8a32760adb3a4e9cb","cacheData":{"env":{}}}